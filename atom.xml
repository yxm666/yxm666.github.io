<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Silence</title>
  
  <subtitle>读书 + 赚钱 + 健身 = 生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-15T11:09:17.882Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>遠見卓識</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>summary</title>
    <link href="http://yoursite.com/2019/08/15/summary/"/>
    <id>http://yoursite.com/2019/08/15/summary/</id>
    <published>2019-08-15T07:40:34.000Z</published>
    <updated>2019-08-15T11:09:17.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>  <strong>如今，我在空调里吃着🍉，享受着别人马上要结束，而我刚刚开始的暑假生活。俗话说的好，假期都是用来超越别人的(<del>我可不干这种事情，主要我太懒</del>)。暑假一个月，说少不少，说多不多，但在平常的学习上很少有时间可以进行这样集中的编程知识的学习，不时成为锤炼自己的好时机。假期确实提升了很多，有必要进行一些梳理，进行一些总结。当然本次只是给一些技术的进行大概的总结，涉及的知识不会太深。</strong></p></blockquote><h1 id="看看学了什么"><a href="#看看学了什么" class="headerlink" title="看看学了什么"></a>看看学了什么</h1><p>  <strong>让我们首先以一张思维导图开始这篇博文<del>哇 好专业 666鸭</del>,图里包含了这个暑假学到或者了解到<del>当然不可能面面俱到</del>。右边是框架的学习，左边是较为细一点<del>反正自己能理解的一个划分</del>东西还算比较多，够唠一会的了。</strong></p><p><img src="https://i.loli.net/2019/08/15/fBMuJO9ct1ZxqbD.png" alt="暑假学习(后端)"></p><hr><h1 id="框架学习"><a href="#框架学习" class="headerlink" title="框架学习"></a>框架学习</h1><hr><h2 id="框架学习之SSM框架"><a href="#框架学习之SSM框架" class="headerlink" title="框架学习之SSM框架"></a>框架学习之SSM框架</h2><p>​    <strong>作为一个9102年学框架的后端Java开发人员，当然要从SSM框架学起(<del>学校还在教着SSH</del>),SSM框架即为Spring、SPring MVC、Mybatis。框架集由Spring、MyBatis两个开源框架整合而成（SpringMVC是Spring中的部分内容）。常作为数据源较简单的web项目的框架。</strong></p><h3 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h3><p>　　<strong>Spring就像是整个项目中装配bean的大工厂，在配置文件中可以指定使用特定的参数去调用实体类的构造方法来实例化对象。也可以称之为项目中的粘合剂。</strong></p><p>　　<strong>Spring的核心思想是IoC（控制反转），面向切面编程就是 Spring 最为重要的功能之一了，在数据库事务中切面编程被广泛使用。即不再需要程序员去显式地<code>new</code>一个对象，而是让Spring框架帮你来完成这一切。</strong></p><p>​    <strong>(<del>上面的粘贴自百度</del>)在我的理解里，Spring 主要分为2部分(IOC与AOP)，IOC就是帮你创建对象的，而不用每一个都自己new，通过依赖注入实现程序之间的解耦。框架的出现大多都是提供良好的封装性、实现程序的高内聚与低耦合。</strong></p><p>​    <strong>AOP 即 Aspect Oriented Program 面向切面编程。首先，在面向切面编程的思想里面，把功能分为核心业务功能，和周边功能。</strong></p><ul><li><p><strong>所谓的核心业务</strong>，比如登陆，增加数据，删除数据都叫核心业务</p></li><li><p><strong>所谓的周边功能</strong>，比如性能统计，日志，事务管理等等</p></li></ul><p>  <strong>周边功能在 Spring 的面向切面编程AOP思想里，即被定义为切面在面向切面编程AOP的思想里面，核心业务功能和切面功能分别独立进行开发，然后把切面功能和核心业务功能 “编织” 在一起，这就叫AOP</strong></p><h4 id="AOP-的目的"><a href="#AOP-的目的" class="headerlink" title="AOP 的目的"></a>AOP 的目的</h4><p>  <strong>AOP能够将那些与业务无关，却为业务模块所共同调用的逻辑或责任（例如事务处理、日志管理、权限控制等）封装起来，便于减少系统的重复代码</strong>，<strong>降低模块间的耦合度</strong>，并<strong>有利于未来的可拓展性和可维护性。</strong></p><h4 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h4><p>  ​    <strong>AOP的是让开发人员更专注于核心业务的处理，而不用在核心业务的周围围绕着周边业务，增大代码量，让代码的可读性变差，耦合度增加。</strong></p><p>  <img src="https://i.loli.net/2019/08/15/jQL21EqZiHlVzSC.png" alt="Spring特征"></p><h3 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a>Spring MVC</h3><p>​    <strong>SpringMVC在项目中拦截用户请求，它的核心Servlet即DispatcherServlet承担中介或是前台这样的职责，将用户请求通过HandlerMapping去匹配Controller，Controller就是具体对应请求所执行的操作。SpringMVC相当于SSH框架中struts。</strong></p><p>​    <strong>pring MVC 是一个模型 - 视图 - 控制器（MVC）的Web框架建立在中央前端控制器servlet（DispatcherServlet），它负责发送每个请求到合适的处理程序，使用视图来最终返回响应结果的概念。Spring MVC 是 Spring 产品组合的一部分，它享有 Spring IoC容器紧密结合Spring松耦合等特点，因此它有Spring的所有优点。</strong></p><h3 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a><strong>mybatis</strong></h3><p>​    <strong>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</strong></p><p>　　<strong>mybatis是对jdbc的封装，它让数据库底层操作变的透明。mybatis的操作都是围绕一个sqlSessionFactory实例展开的。mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。</strong></p><p>​    <strong>页面发送请求给控制器，控制器调用业务层处理逻辑，逻辑层向持久层发送请求，持久层与数据库交互，后将结果返回给业务层，业务层将处理逻辑发送给控制器，控制器再调用视图展现数据。(三层架构)</strong></p><hr><h2 id="框架学习之Spring-Boot"><a href="#框架学习之Spring-Boot" class="headerlink" title="框架学习之Spring Boot"></a>框架学习之Spring Boot</h2><blockquote><p><strong>Spring Boot 作为以后后端开发的使用框架，在Spring、Spring MVC 基础上减少了大量的配置，作为一种开箱即用的框架，大大简化了开发人员的开发流程。</strong></p></blockquote><h4 id="首先分享一些比较好的学习连接资源"><a href="#首先分享一些比较好的学习连接资源" class="headerlink" title="首先分享一些比较好的学习连接资源"></a><strong>首先分享一些比较好的学习连接资源</strong></h4><ul><li><p><a href="https://docs.spring.io/spring-boot/docs/2.1.7.RELEASE/reference/html/" target="_blank" rel="noopener">Spring Boot 官方文档</a></p></li><li><p>Spring Boot 中文索引](<a href="http://springboot.fun/" target="_blank" rel="noopener">http://springboot.fun/</a>)</p></li><li><p><a href="http://www.springboot.wiki/" target="_blank" rel="noopener">Spring Boot 教程汇总</a></p></li><li><p><a href="https://www.javaboy.org/springboot/" target="_blank" rel="noopener">江南一点雨 Spring Boot 系列文章</a></p></li><li><p><a href="http://www.ityouknow.com/spring-boot.html" target="_blank" rel="noopener">纯洁的微笑 Spring Boot 系列文章</a></p><hr><h4 id="什么是Spring-Boot呢？"><a href="#什么是Spring-Boot呢？" class="headerlink" title="什么是Spring Boot呢？"></a>什么是Spring Boot呢？</h4><p>​    <strong>什么是Spring Boot？他跟SPring又有什么关系?怎么又来了一种新的框架？相信无数初学者都曾想过这些问题。首先Spring Boot并非是一种全新的框架。Boot即为启动的意思，旨在快速启动你的Spring项目并通过一些自动配置来减少人为的主动配置。并且Spring Boot 对一些主流框架都有整合的Start,他就像一个框架届的Maven，通过对框架的整合，让开发变得简单起来。</strong></p><p><img src="https://spring.io/img/homepage/icon-spring-boot.svg" alt="Spring Boot"></p></li></ul><h4 id="Spring-boot的四个主要特性"><a href="#Spring-boot的四个主要特性" class="headerlink" title="Spring boot的四个主要特性"></a>Spring boot的四个主要特性</h4><ul><li><p><strong>独立运行的Spring项目</strong>：Spring Boot可以以jar包的形式来运行，运行一个Spring Boot项目我们只需要通过java -jar xx.jar类运行。非常方便。</p></li><li><p><strong>内嵌Servlet容器</strong>：Spring Boot可以内嵌Tomcat，这样我们无需以war包的形式部署项目。</p></li><li><p><strong>提供starter简化Maven配置</strong>：使用Spring或者SpringMVC我们需要添加大量的依赖，而这些依赖很多都是固定的，这里Spring Boot 通过starter能够帮助我们简化Maven配置。</p></li><li><p><strong>自动配置Spring</strong></p></li><li><p><strong>准生产的应用监控</strong></p></li><li><p><strong>无代码生成和xml配置</strong></p><hr></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p><strong>暂时先大概的说下这2个后端框架吧，只是大概的讲讲这些框架的有什么作用以及它们的应用，之后再写写那些中间件,溜啦😉😉😉😉<del>~</del></strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;  &lt;strong&gt;如今，我在空调里吃着🍉，享受着别人马上要结束，而我刚刚开始的暑假生活。俗话说的好，假期都是用
      
    
    </summary>
    
    
      <category term="感悟" scheme="http://yoursite.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="总结" scheme="http://yoursite.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>just one year</title>
    <link href="http://yoursite.com/2019/08/13/just-one-year/"/>
    <id>http://yoursite.com/2019/08/13/just-one-year/</id>
    <published>2019-08-13T10:19:50.000Z</published>
    <updated>2019-08-15T08:01:21.586Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>​    <strong>不知不觉已经来轻大一年了，去年的我还对编程懵懂无知，曾经为自己下了一个IDE在控制台上输出了“hello world”而开心不已，如今我已经开始写接口文档，进行前后端的分离开发。是时候在一个深夜(凌晨两点)去回忆一下，这一年的日子，去想想得失，想想时间带来了什么。</strong></p></blockquote><hr><p><img src="https://i.loli.net/2019/08/13/eZx8HOj4bs95of6.jpg" alt="梦想"></p><h2 id="去年暑假"><a href="#去年暑假" class="headerlink" title="去年暑假"></a>去年暑假</h2><p>​    <strong>为什么选做一个程序员呢？可能比较喜欢搞点好东西，获取一些酷酷的软件、插件就像如同获得了宝藏一样，让我开心不已，经常为了折腾某一个软件去折腾好几天(比如搞这个花里胡哨的博客折腾了我3天)。确定了想要学软件后，我开始私聊了一些学长咨询。可能这也是一切的起点吧，我知道了当时学校有一个实验室叫软件创新基地。当时的我就立志想进软创。故事就由此展开了。</strong><br>​    <strong>开始去B站上找了浙江大学的视频看，还傻傻的拿了笔记本写了笔记，后来因为去打工，算是搁置了，只看到了循环？之后打工的经历或许也改变了我，它让我变得现实了，待人接物也大不相同了。</strong>```</p><hr><h2 id="初识-（9月-11月"><a href="#初识-（9月-11月" class="headerlink" title="初识  （9月-11月)"></a>初识  （9月-11月)</h2><p>​    <strong>一切都那么新鲜，对什么事情都充满了好奇，什么都想尝试，比如吃一口苹果。这一次我为自己的新鲜感与欠妥当付出了代价，这个甜甜的苹果的滋味知道如今仍然在嘴中回荡只是略带苦涩。可一切都没有重来的余地，何况曾今的*也给过我满嘴的芬芳。</strong></p><p>​    <strong>聊些技术有关的吧。在知道软创有考核时，当时被安利买了 《C prime plus》的我每天都在6点钟去看书，默默为它做准备，是这一年来去图书馆最勤的时候。如我所愿，我通过了面试。可这不意味着安稳，一次一次考核，身边的空位开始变多，不敢松懈，不敢停下。一本厚厚的书也被我做足了笔记，没有电脑就自己推演结果，有电脑就在电脑上执行一次。一步一步，到了指针等什么乱七八糟的东西，令人头疼、头秃。之后进行了C语言实训项目的提前编程。说实话，刚开始的时候，我大概有 3、4天都不知道从何下手，翻翻CSDN、问问谷歌。先编写了骚气的功能界面(唉，骚气慢慢的我)，可是输入的验证却难住了我，判断用户的输入，进行提示反馈。从百度的加上我自己考虑的，大概脑子里有个谱了，添加、显示、更新、删除，最开始的CRUD的实现。万事开头难，这个项目费事程度比我以后碰到bug解决时间都长，可一切都值得的。</strong></p><p><img src="https://i.loli.net/2019/08/13/8xzAhus1pDJ24rB.jpg" alt="dva爱你哟"></p><hr><h2 id="Time-to-change-12月-2月"><a href="#Time-to-change-12月-2月" class="headerlink" title="Time to change(12月-2月)"></a>Time to change(12月-2月)</h2><p>​    <strong>初入茅庐的我，起初觉得学完了C语言，好像感到自己已经精通了编程一样，有些飘飘然。而Java作为一门以后用来吃饭的语言，显然不仅仅只需要掌握语法，编程也不仅仅只是编程语言的学习，事实上开发中的问题总会接踵而至。学习OOP语言，在没有面向对象思想的我一时间难以理解，尤其是构造方法，子父类等等。在接触新事物的时候，这些都是难免的，在自己试错自己找到解决方法后对知识的牢记与成就感是他人直接告诉你结果的感觉是截然不同的。诚然，试错是成长路上不可或缺的一部。</strong></p><p>​    <strong>在越过了OOP的坎后，后面几大章也并不轻松(虽然学校一点都不讲),IO、集合、多线程、网络编程，说实话，这些知识当时因为学的太快并没有留下很深印象(毕竟一个半月学会一门编程语音显得并没有那么轻松)，不过在当时也算是掌握的算不错，当然在下学期(大二上)，如果有功夫的话是需要好好回顾的，毕竟Java SE是基础。</strong></p><p>​        <strong>好了又到了做项目的时候。项目所需的知识总和你掌握的知识有一定的差距，这些短板也会在项目中补齐。当时刚做项目的时候，感觉链接数据库(JDBC)都是一个难点，索性找到了一个黑马的管家婆(这名字土爆了)的视频，跟着学习。我一直觉得程序猿跟画家一样，开始时候进行描摹，从别人的画中找到感觉，再进行自己的创作。收获颇多的可能不是会根据老师讲的可以完成自己的项目，而是视频中的MVC思想，让我对分层进行了了解(我想会抽个文章写一下MVC与三层架构的那些事)。虽说凭借着MAC的美学设计，不用加任何修饰，程序的界面简洁优雅(吹爆MBP)，也算是第一次进行了可视化程序。点点按按的总比命令行好，虽然程序员的原则是能用键盘的事情绝不用鼠标，笑。</strong></p><p>​    <strong>有些事情总算没有了挽回的余地，事实上，一些事情早都可以预料却不能坦然面对，总之，各自安好。可是真的安好了嘛？我开始不推心置腹，开始冷眼旁边，开始置身事外，我真的不明白或者看不透嘛？可能就是看的太透才会这样。一切的一切都Don’t Care，它好像一颗慢性毒药，一点一点再暗暗杀死我，而我却品尝着这令人上瘾的滋味。</strong></p><p><img src="https://i.loli.net/2019/08/13/SfIQpjAPlTytq96.jpg" alt="前路"></p><hr><h2 id="得失-3月-6月"><a href="#得失-3月-6月" class="headerlink" title="得失     (3月-6月)"></a>得失     (3月-6月)</h2><p>​    <strong>well，下学期就放一个章节说好了。学完了Java SE，开始了Java Web的内容。我觉得还是明确个方向学习Java Web 是比较好的(<del>我一辈子不要写标签！！！！</del>)，但是在Java web中也算踩坑严重吧，因为一些事情的耽误，学的比较拖拉，导致又反反复复学习，最后学了大概来来回回有3遍，可能加深印象了？web作为框架的基础，是有必要学习的，当时急切的想要有后端的开发能力(<del>框架方便啊</del>)，所以急于求成，现在也有点后悔，项目也做了稀巴烂，几个月都感觉压力与失望，比较丧。</strong></p><p><strong>不过也有好的一面不是嘛？失去了一些东西后，更有精力专注于自己的事情上，每天做规划，几点到几点锻炼腹肌，几点到几点撸铁，晚上每天带着耳机去看着带着晚霞的体育场，带着耳机跑5km,那种每天回想起来一切都按自己计划执行，每天没有辜负自己的完美生活令自己开心不已，每天都对明天充满期待，体脂率一点点下降，肌肉率一点点上升，感觉生活充满了期望。(<del>哦，看看现在，天天敲代码，摸着自己的小肚子</del>)</strong></p><p><img src="https://s2.ax1x.com/2019/08/14/mihcad.png" alt="傍晚的体育场"></p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>一年的时光，感觉自己学会了很多，失去了很多，得到了许多，经历了许许多多的美好，也丧了很长时间。可这就是生活，起起伏伏伏伏伏伏伏伏伏伏伏伏，希望自己可以继续朝着自己向往的生活努力，向着自己想成为的人而努力。等待下一个一年。</strong></p><p><img src="https://i.loli.net/2019/08/13/5n49bWIwku1XctT.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;​    &lt;strong&gt;不知不觉已经来轻大一年了，去年的我还对编程懵懂无知，曾经为自己下了一个IDE在控制台上输
      
    
    </summary>
    
      <category term="总结" scheme="http://yoursite.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="感悟" scheme="http://yoursite.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
</feed>
